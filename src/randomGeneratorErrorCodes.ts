export enum RandomGeneratorErrorCodes {
    ByteCountGtZero = 'byteCount must be greater than 0',
    TypedArrayAllocationFailed = 'TypedArray allocation failed, requested random too big',
    MinGteZero = 'min must be greater than or equal to 0',
    MinLteMaxSafeInteger = 'min must be less than or equal to Number.MAX_SAFE_INTEGER',
    MaxGteZero = 'max must be greater than or equal to 0',
    MaxLteMaxSafeInteger = 'max must be less than or equal to Number.MAX_SAFE_INTEGER',
    HowManyGtZero = 'howMany must be greater than 0',
    MaxGtMin = 'max must be greater than min',
    MaxMinusMinPlus1LteMaxAlphabetLength = 'max - min + 1 must be less than or equal to RandomGenerator.MAX_ALPHABET_LEN',
    AlphabetLengthLteMaxAlphabetLength = 'alphabetLength must be less than or equal to RandomGenerator.MAX_ALPHABET_LEN',
    IfUniqueTrueThenHowManyLteMaxMinusMinPlus1 = 'if unique = true, howMany must be less than or equal to max - min + 1',
    AlphabetNotEmpty = 'alphabet must not be empty',
    AlphabetMaxMaxAlphabetLenCharacters = 'alphabet must have maximum RandomGenerator.MAX_ALPHABET_LEN characters',
    DesiredLengthGtZero = 'desiredLength must be greater than 0',
    IfUniqueTrueThenDesiredLengthLteAlphabetLength = "if unique = true, desiredLength must be less than or equal to the alphabet's length",
    IfUniqueTrueThenHowManyLteAlphabetLength = 'if unique = true, howMany must be less than or equal to alphabetLength',
    AlphabetLengthGtZero = 'alphabetLength must be greater than 0',
    DesiredRandomLengthGtZero = 'desiredRandomLength must be greater than 0',
}
